<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yz.dao.BdStudentSendMapper">
	
	<!-- <update id="updateBookReceiveAddressAndStatus">
		update 
		  bd_student_send 
		set
		  mobile = #{mobile, jdbcType=VARCHAR},
		  address = #{address, jdbcType=VARCHAR},
		  province_code = #{provinceCode, jdbcType=VARCHAR},
		  city_code = #{cityCode, jdbcType=VARCHAR},
		  district_code = #{districtCode, jdbcType=VARCHAR},
		  user_name = #{saName},
		  address_status = '1',
		  address_update_time=NOW() 
		where send_id in 
		  (select 
		    a.send_id 
		  from
		    (select 
		      s.`send_id` 
		    from
		      bd_student_send s 
		      left join bd_learn_info bli 
		        on bli.`learn_id` = s.`learn_id` 
		      left join bd_student_info bsi 
		        on bsi.`std_id` = bli.`std_id` 
		    where bsi.`std_id` = #{stdId}
		      and s.`textbook_type` = 'XK' 
		      and s.`address_status` in ('6','1','3')) a)
	</update> -->
	
	<update id="updateBookReceiveAddressAndStatus">
		update 
		  `bms`.bd_student_send 
		set
		  mobile = #{mobile, jdbcType=VARCHAR},
		  address = #{address, jdbcType=VARCHAR},
		  province_code = #{provinceCode, jdbcType=VARCHAR},
		  city_code = #{cityCode, jdbcType=VARCHAR},
		  district_code = #{districtCode, jdbcType=VARCHAR},
		  user_name = #{saName},
		  address_status = '1',
		  address_update_time=NOW() 
		where learn_Id=#{learnId,jdbcType=VARCHAR} and textbook_type='XK'
		and address_status in ('6','1','3')
	</update>
	
	<insert id="insertSelective" parameterType="com.yz.model.educational.BdStudentSend">
		<selectKey resultType="java.lang.String" keyProperty="sendId"
			order="BEFORE">
			SELECT seq();
		</selectKey>
		insert into `bms`.bd_student_send
		<trim prefix="(" suffix=")" suffixOverrides=",">
			send_id,
			<if test="learnId != null">
				learn_id,
			</if>
			<if test="batchId != null">
				batch_id,
			</if>
			<if test="orderBookStatus != null">
				order_book_status,
			</if>
			<if test="logisticsNo != null">
				logistics_no,
			</if>
			<if test="logisticsName != null">
				logistics_name,
			</if>
			<if test="logisticsContact != null">
				logistics_contact,
			</if>
			<if test="receiveStatus != null">
				receive_status,
			</if>
			<if test="semester != null">
				semester,
			</if>
			<if test="addressStatus != null">
				address_status,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="textbookType != null">
				textbook_type,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="provinceCode != null">
				province_code,
			</if>
			<if test="cityCode != null">
				city_code,
			</if>
			<if test="districtCode != null">
				district_code,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{sendId,jdbcType=VARCHAR},
			<if test="learnId != null">
				#{learnId,jdbcType=VARCHAR},
			</if>
			<if test="batchId != null">
				#{batchId,jdbcType=VARCHAR},
			</if>
			<if test="orderBookStatus != null">
				#{orderBookStatus,jdbcType=VARCHAR},
			</if>
			<if test="logisticsNo != null">
				#{logisticsNo,jdbcType=VARCHAR},
			</if>
			<if test="logisticsName != null">
				#{logisticsName,jdbcType=VARCHAR},
			</if>
			<if test="logisticsContact != null">
				#{logisticsContact,jdbcType=VARCHAR},
			</if>
			<if test="receiveStatus != null">
				#{receiveStatus,jdbcType=VARCHAR},
			</if>
			<if test="semester != null">
				#{semester,jdbcType=VARCHAR},
			</if>
			<if test="addressStatus != null">
				#{addressStatus,jdbcType=VARCHAR},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateUserId != null">
				#{updateUserId,jdbcType=VARCHAR},
			</if>
			<if test="textbookType != null">
				#{textbookType,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="provinceCode != null">
				#{provinceCode,jdbcType=VARCHAR},
			</if>
			<if test="cityCode != null">
				#{cityCode,jdbcType=VARCHAR},
			</if>
			<if test="districtCode != null">
				#{districtCode,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<insert id="insertBdTextBookSend" parameterType="java.lang.String">
		INSERT INTO `bms`.bd_textbook_send (send_id, textbook_id) 
		SELECT 
		  #{sendId} send_id,
		  b.`textbook_id` 
		FROM
		  `bms`.bd_textbook b 
		  LEFT JOIN `bms`.bd_plan_textbook p 
		    ON p.`textbook_id` = b.`textbook_id` 
		  LEFT JOIN `bms`.bd_teach_plan t 
		    ON p.`thp_id` = t.`thp_id` 
		  LEFT JOIN `bms`.bd_learn_info bli 
		    ON t.`pfsn_id` = bli.`pfsn_id` 
		WHERE bli.`learn_id` = #{learnId} 
	</insert>
	
	<select id="selectTestSubByLearnId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT 
		  b.`subject_id` 
		FROM
		  `bms`.bd_learn_info bli 
		  LEFT JOIN `bms`.bd_unvs_profession bup 
		    ON bup.`pfsn_id` = bli.`pfsn_id` 
		  left join `bms`.bd_test_group g 
		    on bup.`group_id` = g.`group_id` 
		  left join `bms`.bd_tg t 
		    on t.`group_id` = g.`group_id` 
		  left join `bms`.bd_test_subject b 
		    on b.`subject_id` = t.`subject_id` 
		WHERE
		bli.`learn_id` = #{learnId}
	</select>
	
	<insert id="insertBdTextBookSendFD" parameterType="java.lang.String">
		INSERT INTO `bms`.bd_textbook_send (send_id, textbook_id) 
		SELECT 
		  #{sendId, jdbcType=VARCHAR} send_id,
		  b.`textbook_id` 
		FROM
		  `bms`.bd_textbook b 
		WHERE b.`test_subject` IN 
		<foreach collection="testSubject" item="sub" open="(" close=")"
			separator=",">
			#{sub, jdbcType=VARCHAR}
		</foreach>
	</insert>
	
	<select id="selectTestBookCount" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT 
		  count(b.`textbook_id`) 
		FROM
		  `bms`.bd_textbook b 
		WHERE b.`test_subject` IN 
		<foreach collection="testSubject" item="sub" open="(" close=")"
			separator=",">
			#{sub, jdbcType=VARCHAR}
		</foreach>
	</select>
	
</mapper>